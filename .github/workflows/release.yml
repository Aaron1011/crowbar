name: Release

on:
  push:
    tags:
      - "*"

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [linux, windows, macos]
        include:
          - name: linux
            os: ubuntu-latest
            artifact_name: crowbar
            asset_name: crowbar-x86_64-linux
          - name: windows
            os: windows-latest
            artifact_name: crowbar.exe
            asset_name: crowbar-x86_64-windows.exe
          - name: macos
            os: macos-latest
            artifact_name: crowbar
            asset_name: crowbar-x86_64-macos

    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Set the release tag
        id: set_tag
        run: echo ::set-output name=RELEASE_TAG::${GITHUB_REF/refs\/tags\/v/}
        shell: bash
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - name: Install dependencies and set OS environment variable
        run: |
          sudo apt-get install -y libdbus-1-dev gnome-keyring dbus-x11 libssl-dev
          echo "::set-env name=GITHUB_ACTIONS_OS::linux"
        if: runner.os == 'Linux'
      - name: Build
        env:
          RUST_BACKTRACE: 1
          RUSTFLAGS: "-C link-arg=-s -C target-feature=+crt-static"
        run: |
          cargo fmt -- --check
          cargo build --release --locked
          cargo clippy --release
          ci/test.sh
      - name: Publish to crates.io
        run: cargo publish -v --locked --token ${{ secrets.CRATES_IO_TOKEN }}
        if: runner.os == 'Linux'
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
      - name: Bump Homebrew formula
        uses: mislav/bump-homebrew-formula-action@v1
        with:
          formula-name: crowbar
          homebrew-tap: moritzheiber/homebrew-tap
          base-branch: master
          download-url: "https://github.com/moritzheiber/crowbar/releases/download/v${{ steps.set_tag.outputs.RELEASE_TAG }}/crowbar-x86_64-macos"
        env:
          COMMITTER_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
        if: runner.os == 'macOS'
      - name: Upload release to Chocolatey
        run: |
          mkdir -p chocolatey/release
          cp -v target/release/crowbar.exe chocolatey/release/
          cp -v chocolatey/VERIFICATION.txt chocolatey/release/
          cp -v LICENSE chocolatey/release/
          cd chocolatey/
          choco pack --version ${{ steps.set_tag.outputs.RELEASE_TAG }} crowbar.nuspec
          choco push crowbar.${{ steps.set_tag.outputs.RELEASE_TAG }}.nupkg -k ${{ secrets.CHOCOLATEY_API_KEY }} -s https://push.chocolatey.org/
        if: runner.os == 'Windows'
